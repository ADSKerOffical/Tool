tool = Instance.new("Tool", game.Players.LocalPlayer.Backpack)
tool.Name = "Fractal Rocket Launcher"
tool.GripPos = Vector3.new(0, -0.8, 0.6)

handle = Instance.new("Part", tool)
handle.Name = "Handle"

mesh = Instance.new("SpecialMesh", handle)
mesh.MeshId = "rbxassetid://287439768"
mesh.TextureId = "rbxassetid://15368571929"
mesh.Scale = Vector3.new(0.7, 0.7, 0.7)

local lastPressTime = 0
tool.Activated:Connect(function()
  local currentTime = tick()
  if currentTime - lastPressTime >= 15 then
    lastPressTime = currentTime
    Mouse = game.Players.LocalPlayer:GetMouse()
    mousehit = Mouse.Hit.Position

    ball = Instance.new("Part", workspace)
    ball.Color = Color3.new(1, 1, 1)
    ball.Shape = "Ball"
    ball.Material = "Neon"
    ball.Size = Vector3.new(1.5, 1.5, 1.5)
    ball.CanCollide = true
    ball.Position = handle.Position
    game.Debris:AddItem(ball, 10)
    
    partTweenn2 = game:GetService("TweenService"):Create(ball, TweenInfo.new(1, Enum.EasingStyle.Linear), {
        Size = Vector3.new(10, 10, 10)
    })
    partTweenn2:Play()

    bodyVelocity = Instance.new("BodyVelocity", ball)
    bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
    bodyVelocity.Velocity = (mousehit - ball.Position).Unit * 130
    ball.CFrame = CFrame.new(ball.Position, mousehit)

    ball.Touched:Connect(function(part)
      if part:IsA("Part") and part ~= handle and part.Parent ~= game.Players.LocalPlayer.Character then
crater = Instance.new("Part", workspace)
crater.Position = ball.Position
crater.Color = Color3.new(1, 1, 1)
crater.Size = Vector3.new(10, 10, 10)
crater.Material = "Neon"
crater.Shape = "Ball"
crater.CanCollide = false
crater.Anchored = true
game.Debris:AddItem(crater, 15)
ball:Destroy()

sound = Instance.new("Sound", crater)
sound.SoundId = "rbxassetid://9057738420"
sound.Volume = 3.5
sound.PlaybackSpeed = 1
sound.Looped = false
sound:Play()
   ball:Destroy()
 partTweenn2 = game:GetService("TweenService"):Create(crater, TweenInfo.new(5, Enum.EasingStyle.Exponential), {
        Size = Vector3.new(50, 50, 50)
    })
    partTweenn2:Play()
local foundHumanoids = {}
Usuario = game.Players.LocalPlayer
for _, v in pairs(workspace:GetDescendants()) do
    if v:IsA("Humanoid") and v.RootPart then
        local distance = (v.RootPart.Position - crater.Position).magnitude
        if distance <= 30 then
            table.insert(foundHumanoids, v)
        end
    end
end

for _, humanoid in pairs(foundHumanoids) do
 humanoid:ChangeState("FallingDown")
 humanoid:TakeDamage(50)
end
  task.wait(6.5)
partTweenn2 = game:GetService("TweenService"):Create(crater, TweenInfo.new(0.3, Enum.EasingStyle.Exponential), {
        Size = Vector3.zero
    })
    partTweenn2:Play()
  task.wait(3)
  
cra = Instance.new("Part", workspace)
cra.Size = Vector3.zero
cra.Material = "Neon"
cra.Shape = "Ball"
cra.Anchored = true
cra.CanCollide = false
cra.Position = crater.Position
game.Debris:AddItem(cra, 6)
  
sound = Instance.new("Sound", workspace)
sound.SoundId = "rbxassetid://9057675920"
sound.Volume = 1
sound.PlaybackSpeed = 1
sound.Looped = false
sound:Play()

partTweenn2 = game:GetService("TweenService"):Create(cra, TweenInfo.new(1, Enum.EasingStyle.Exponential), {
        Transparency = 1,
        Size = Vector3.new(400, 400, 400)
    })
    partTweenn2:Play()

local foundHumanoids = {}
for _, v in pairs(workspace:GetDescendants()) do
    if v:IsA("Humanoid") and v.RootPart then
        local distance = (v.RootPart.Position - cra.Position).magnitude
        if distance <= 305 then
            table.insert(foundHumanoids, v)
        end
    end
end

for _, humanoid in pairs(foundHumanoids) do
 local recoilDirection = (cra.Position - humanoid.RootPart.Position).Unit
 humanoid.RootPart.Velocity += recoilDirection * -400
 humanoid:ChangeState("FallingDown")
 humanoid:TakeDamage(1150)
end
      end
    end)
  end
end)
