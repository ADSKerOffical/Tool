tool = Instance.new("Tool", game.Players.LocalPlayer.Backpack)
tool.Name = "Uno"
tool.ToolTip = "With this card you can control entities and so on"

handle = Instance.new("Part", tool)
handle.Name = "Handle"
handle.Size = Vector3.new(1.13, 1.55, 0.01)

texture1 = Instance.new("Decal", handle)
texture1.Texture = "rbxassetid://3145352822"

texture2 = Instance.new("Decal", handle)
texture2.Texture = "rbxassetid://3863436233"
texture2.Face = Enum.NormalId.Back

local ScreenGui = Instance.new("ScreenGui", game.Players.LocalPlayer.PlayerGui)
ScreenGui.Enabled = false

local Button = Instance.new("TextButton")
Button.Name = "Button"
Button.Size = UDim2.new(0.04, 0.04, 0.04, 4)
Button.Position = UDim2.new(0.76, 0, 0.6, 0)
Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.TextScaled = true
Button.Text = "STOP"
Button.Parent = ScreenGui

local lastPressTime = 0
Button.MouseButton1Click:Connect(function()
local currentTime = tick()
            if currentTime - lastPressTime >= 7 then
                lastPressTime = currentTime 
local foundHumanoids = {}
Usuario = game.Players.LocalPlayer
for _, v in pairs(workspace:GetDescendants()) do
    if v:IsA("Humanoid") and v.RootPart and v.RootPart.Parent ~= Usuario.Character then
        local distance = (v.RootPart.Position - handle.Position).magnitude
        if distance <= 75 then
            table.insert(foundHumanoids, v)
        end
    end
end

for _, humanoid in pairs(foundHumanoids) do
 coroutine.wrap(function()
spawn(function()
repeat task.wait()
 humanoid:UnequipTools()
until humanoid.RootPart.Anchored == false
end)
  for _, part in ipairs(humanoid.Parent:GetDescendants()) do
        if part:IsA("BasePart") then
            part.AssemblyAngularVelocity = Vector3.zero
            part.Anchored = true
        end
    end
   task.wait(4.5)
  for _, part in ipairs(humanoid.Parent:GetDescendants()) do
        if part:IsA("BasePart") then
            part.AssemblyAngularVelocity = Vector3.zero
            part.Anchored = false
        end
    end
  end)()
end
            end
end)

local Button = Instance.new("TextButton")
Button.Name = "Button"
Button.Size = UDim2.new(0.04, 0.04, 0.04, 4)
Button.Position = UDim2.new(0.82, 0, 0.6, 0)
Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.TextScaled = true
Button.Text = "Its all over"
Button.Parent = ScreenGui

local lastPressTime = 0
Button.MouseButton1Click:Connect(function()
local currentTime = tick()
            if currentTime - lastPressTime >= 3 then
                lastPressTime = currentTime 
for i = 1, 3 do
sound = Instance.new("Sound", handle)
sound.SoundId = "rbxassetid://743521549"
sound.Volume = 2
sound.PlaybackSpeed = 1
sound.Looped = false
sound:Play()

local Anim = Instance.new("Animation")
Anim.AnimationId = "rbxassetid://209875013"
local k = game:GetService("Players").LocalPlayer.Character.Humanoid:LoadAnimation(Anim)
k:Play()
k:AdjustSpeed(1.5)

card = Instance.new("Part", workspace)
card.Size = handle.Size
card.CFrame = handle.CFrame * CFrame.Angles(math.rad(90), 0, 0)
card.Color = Color3.new(0.1, 0.1, 0.1)
card.Material = "Neon"
game.Debris:AddItem(card, 15)

card.Touched:Connect(function(hit)
 human = hit.Parent:FindFirstChildOfClass("Humanoid")
  if human and human.Parent ~= game.Players.LocalPlayer.Character and human:GetState() ~= "Dead" then
card:Destroy()
human:TakeDamage(60 + human.MaxHealth / 4)
human:UnequipTools()
human:ChangeState("FallingDown")
human.RootPart.Velocity = card.CFrame.LookVector * 100

local playerr = game.Players:GetPlayerFromCharacter(human.Parent)
   if playerr then
coroutine.wrap(function()
   controls = require(playerr.PlayerScripts.PlayerModule):GetControls() 
   controls:Disable()
   task.wait(4)
   controls:Enable()
end)()
   end
   
expl = Instance.new("Part", workspace)
expl.Position = human.RootPart.Position
expl.Color = Color3.new(0, 0, 0)
expl.Material = "Neon"
expl.Anchored = true
expl.Shape = "Ball"
expl.CanCollide = false
expl.Size = Vector3.zero
game.Debris:AddItem(expl, 0.5)

task.delay(0.2, function()
sound = Instance.new("Sound", expl)
sound.SoundId = "rbxassetid://3802269741"
sound.Volume = 1
sound.PlaybackSpeed = 1
sound.Looped = false
sound:Play()
end)

partTweenn2 = game:GetService("TweenService"):Create(expl, TweenInfo.new(0.5, Enum.EasingStyle.Exponential), {
        Transparency = 1,
        Size = Vector3.new(30, 30, 30)
    })
    partTweenn2:Play()

local foundHumanoids = {}
Usuario = game.Players.LocalPlayer
for _, v in pairs(workspace:GetDescendants()) do
    if v:IsA("Humanoid") and v.RootPart and v.RootPart.Parent ~= Usuario.Character and v.Parent ~= human.Parent  then
        local distance = (v.RootPart.Position - expl.Position).magnitude
        if distance <= 15 then
            table.insert(foundHumanoids, v)
        end
    end
end

for _, humanoid in pairs(foundHumanoids) do
  humanoid:TakeDamage(50)
  humanoid:ChangeState("FallingDown")
  local recoilDirection = (expl.Position - humanoid.RootPart.Position).Unit
 humanoid.RootPart.Velocity += recoilDirection * 100
end
  end
end)

bodyVelocity = Instance.new("BodyVelocity", card)
bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
bodyVelocity.Velocity = (game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.LookVector).Unit * 150
         task.wait(.5)
end
            end
end)

local Button = Instance.new("TextButton")
Button.Name = "Button"
Button.Size = UDim2.new(0.04, 0.04, 0.04, 4)
Button.Position = UDim2.new(0.88, 0, 0.6, 0)
Button.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
Button.TextColor3 = Color3.fromRGB(255, 255, 255)
Button.TextScaled = true
Button.Text = "Vortex Card"
Button.Parent = ScreenGui

local lastPressTime = 0
Button.MouseButton1Click:Connect(function()
local currentTime = tick()
            if currentTime - lastPressTime >= 8 then
                lastPressTime = currentTime 
rccard = handle:Clone()
rccard.Parent = workspace
rccard.CanCollide = false
rccard.Color = Color3.new(0.3, 0.3, 0.3)
game.Debris:AddItem(rccard, 6)

for _, part in ipairs(rccard:GetDescendants()) do
   if part:IsA("Decal") then
    part:Destroy()
  end 
end

spawn(function()
repeat task.wait()
rccard.CFrame = rccard.CFrame * CFrame.fromEulerAnglesXYZ(0,math.rad(5),0)
until rccard.Parent ~= workspace
end)

spawn(function()
  repeat task.wait()
local foundHumanoids = {}
Usuario = game.Players.LocalPlayer
for _, v in pairs(workspace:GetDescendants()) do
    if v:IsA("Humanoid") and v.RootPart and v.RootPart.Parent ~= Usuario.Character then
        local distance = (v.RootPart.Position - rccard.Position).magnitude
        if distance <= 35 then
            table.insert(foundHumanoids, v)
        end
    end
end

for _, humanoid in pairs(foundHumanoids) do
  humanoid:TakeDamage(1.5 + humanoid.Health / 150)
  humanoid:ChangeState("FallingDown")
  humanoid:UnequipTools()
  local recoilDirection = (rccard.Position - humanoid.RootPart.Position).Unit
 humanoid.RootPart.Velocity += recoilDirection * 60
end
  until rccard.Parent == nil
end)

bodyVelocity = Instance.new("BodyVelocity", rccard)
bodyVelocity.MaxForce = Vector3.new(math.huge, math.huge, math.huge)
bodyVelocity.Velocity = (game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.LookVector).Unit * 75

partTweenn2 = game:GetService("TweenService"):Create(rccard, TweenInfo.new(5, Enum.EasingStyle.Linear), {
        Size = Vector3.new(50, 50, 0.3),
        Color = Color3.new(0, 0, 0)
    })
    partTweenn2:Play()
            end
end)

local lastPressTime = 0
tool.Activated:Connect(function()
  local currentTime = tick()
            if currentTime - lastPressTime >= 10 then
                lastPressTime = currentTime 
sound = Instance.new("Sound", handle)
sound.SoundId = "rbxassetid://7415073383"
sound.Volume = 0.2
sound.PlaybackSpeed = 1
sound.Looped = false
sound:Play()

local previousHealth = game.Players.LocalPlayer.Character.Humanoid.Health
local canUno = true
local uno = game.Players.LocalPlayer.Character.Humanoid.HealthChanged:Connect(function(newHealth)
    if canUno == false then return end
 game.Players.LocalPlayer.Character.Humanoid.Health = previousHealth
end)
 task.wait(2.5)
canUno = false
            end
end)

tool.Equipped:Connect(function()
 ScreenGui.Enabled = true
end)

tool.Unequipped:Connect(function()
 ScreenGui.Enabled = false
end)
